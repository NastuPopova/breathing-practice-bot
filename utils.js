// –§–∞–π–ª: utils.js
// –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –±–æ—Ç–∞

const fs = require('fs');
const { Markup } = require('telegraf');

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –æ—Å–Ω–æ–≤–Ω–æ–π –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º inline-–∫–Ω–æ–ø–æ–∫
function mainKeyboard() {
  return Markup.inlineKeyboard([
    [
      Markup.button.callback('üõí –ö—É–ø–∏—Ç—å –∫—É—Ä—Å', 'show_products'),
      Markup.button.callback('‚ùì –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è', 'show_info')
    ],
    [
      Markup.button.callback('üìù –ú–æ–∏ –ø–æ–∫—É–ø–∫–∏', 'show_purchases'),
      Markup.button.callback('üé¨ –ú–æ–∏ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏', 'show_consultations')
    ],
    [
      Markup.button.url('‚òéÔ∏è –°–≤—è–∑–∞—Ç—å—Å—è —Å –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–º', 'https://t.me/NastuPopova')
    ]
  ]);
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã —Ä–∞–∑–¥–µ–ª–∞ "–ú–æ–∏ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏"
function consultationsKeyboard() {
  return Markup.inlineKeyboard([
    [
      Markup.button.callback('üîÑ –û–±–Ω–æ–≤–∏—Ç—å —Å–ø–∏—Å–æ–∫', 'refresh_consultations')
    ],
    [
      Markup.button.callback('‚óÄÔ∏è –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é', 'back_to_menu')
    ]
  ]);
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
function removeKeyboard() {
  return Markup.removeKeyboard();
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è —Å —É–¥–∞–ª–µ–Ω–∏–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ–º inline-–∫–Ω–æ–ø–æ–∫
async function sendMessageWithInlineKeyboard(ctx, text, options = {}) {
  return await ctx.reply(text, {
    ...options,
    reply_markup: {
      ...mainKeyboard().reply_markup,
      remove_keyboard: true
    }
  });
}

// –ö—ç—à –¥–ª—è —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è —Ñ–∞–π–ª–æ–≤
const fileExistsCache = new Map();

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è —Ñ–∞–π–ª–∞ —Å –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ–º
function fileExists(filePath) {
  // –ï—Å–ª–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç —É–∂–µ –≤ –∫—ç—à–µ, –∏—Å–ø–æ–ª—å–∑—É–µ–º –µ–≥–æ
  if (fileExistsCache.has(filePath)) {
    return Promise.resolve(fileExistsCache.get(filePath));
  }
  
  return new Promise(resolve => {
    fs.access(filePath, fs.constants.F_OK, err => {
      const exists = !err;
      // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤ –∫—ç—à–µ
      fileExistsCache.set(filePath, exists);
      resolve(exists);
    });
  });
}

// –§—É–Ω–∫—Ü–∏—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è —Å –¥–∞—Ç–æ–π –∏ –≤—Ä–µ–º–µ–Ω–µ–º
function logWithTime(message) {
  const now = new Date().toISOString();
  console.log(`[${now}] ${message}`);
}

// –í–∞–ª–∏–¥–∞—Ç–æ—Ä—ã –¥–ª—è –≤–≤–æ–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
const validators = {
  email: (text) => {
    const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
    return emailRegex.test(text);
  },
  
  phone: (text) => {
    const phoneRegex = /^\+?[0-9]{10,15}$/;
    return phoneRegex.test(text.replace(/\s+/g, ''));
  },
  
  url: (text) => {
    const urlRegex = /^(http|https):\/\/[^ "]+$/;
    return urlRegex.test(text);
  }
};

/**
 * –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ª—É—á—à–µ–≥–æ –≤–∞—Ä–∏–∞–Ω—Ç–∞ –æ–±—Ä–∞—â–µ–Ω–∏—è –∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
 * –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö —Å —É—á–µ—Ç–æ–º –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏–π
 * 
 * @param {Object} user - –û–±—ä–µ–∫—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ ctx.from
 * @param {boolean} useLongName - –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ª–∏ –ø–æ–ª–Ω–æ–µ –∏–º—è, –µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–Ω–æ
 * @returns {string} - –ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –æ–±—Ä–∞—â–µ–Ω–∏—è
 */
function getUserName(user, useLongName = false) {
  if (!user) return '–¥—Ä—É–≥';
  
  // –ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
  const firstName = user.first_name ? user.first_name.trim() : '';
  const lastName = user.last_name ? user.last_name.trim() : '';
  const username = user.username ? user.username.trim() : '';
  
  // –î–µ—Ç–µ–∫—Ç–æ—Ä —Ä—É—Å—Å–∫–∏—Ö –∏–º–µ–Ω/—Ñ–∞–º–∏–ª–∏–π - –ø—Ä–∏–º–µ—Ä–Ω—ã–π –ø—Ä–∏–∑–Ω–∞–∫ –Ω–∞–ª–∏—á–∏—è –∫–∏—Ä–∏–ª–ª–∏—Ü—ã
  const isCyrillic = (text) => /[–∞-—è–ê-–Ø—ë–Å]/.test(text);
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –∏–º—è
  if (firstName) {
    // –í —Ä—É—Å—Å–∫–∏—Ö –∏–º–µ–Ω–∞—Ö –º–æ–∂–µ—Ç –±—ã—Ç—å —É–∫–∞–∑–∞–Ω–æ "–ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤–∏—á" - –ø—ã—Ç–∞–µ–º—Å—è –≤—ã–¥–µ–ª–∏—Ç—å –ø–µ—Ä–≤—É—é —á–∞—Å—Ç—å
    if (isCyrillic(firstName) && firstName.includes(' ')) {
      // –ï—Å–ª–∏ –µ—Å—Ç—å –ø—Ä–æ–±–µ–ª, –±–µ—Ä–µ–º –ø–µ—Ä–≤—É—é —á–∞—Å—Ç—å (–ø—Ä–µ–¥–ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ –∏–º—è –±–µ–∑ –æ—Ç—á–µ—Å—Ç–≤–∞)
      return firstName.split(' ')[0];
    }
    
    // –î–ª—è –¥–ª–∏–Ω–Ω–æ–≥–æ —Ñ–æ—Ä–º–∞—Ç–∞ –º–æ–∂–µ–º –¥–æ–±–∞–≤–∏—Ç—å —Ñ–∞–º–∏–ª–∏—é
    if (useLongName && lastName) {
      return `${firstName} ${lastName}`;
    }
    
    // –í –æ—Å—Ç–∞–ª—å–Ω—ã—Ö —Å–ª—É—á–∞—è—Ö –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –ø—Ä–æ—Å—Ç–æ –∏–º—è
    return firstName;
  }
  
  // –ï—Å–ª–∏ –∏–º–µ–Ω–∏ –Ω–µ—Ç, –Ω–æ –µ—Å—Ç—å username
  if (username) {
    return username;
  }
  
  // –ï—Å–ª–∏ –µ—Å—Ç—å —Ç–æ–ª—å–∫–æ —Ñ–∞–º–∏–ª–∏—è
  if (lastName) {
    return lastName;
  }
  
  // –ï—Å–ª–∏ –Ω–∏—á–µ–≥–æ –Ω–µ—Ç, –∏—Å–ø–æ–ª—å–∑—É–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–µ –æ–±—Ä–∞—â–µ–Ω–∏–µ
  return '–¥—Ä—É–≥';
}

module.exports = {
  mainKeyboard,
  consultationsKeyboard,
  removeKeyboard,
  sendMessageWithInlineKeyboard,
  fileExists,
  logWithTime,
  validators,
  getUserName
