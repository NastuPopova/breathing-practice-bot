// –§–∞–π–ª: index.js
// –û—Å–Ω–æ–≤–Ω–æ–π —Ñ–∞–π–ª Telegram-–±–æ—Ç–∞ —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π –≤–µ–±—Ö—É–∫–æ–≤

// –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –æ–±—â—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
const { 
  app, 
  bot, 
  PORT, 
  APP_URL, 
  ADMIN_ID, 
  pendingOrders, 
  completedOrders,
  startTime,
  setupWebhook,
  logWithTime,
  formatUptime
} = require('./config');

// –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –º–æ–¥—É–ª–∏
const { products, messageTemplates } = require('./data');
const { mainKeyboard, consultationsKeyboard, removeKeyboard, sendMessageWithInlineKeyboard, fileExists } = require('./utils');
const { handleStart, handleBuyAction, handleConfirmBuy, handleTextInput } = require('./handlers');
const { notifyAdmin, confirmPayment, sendConsultationRecording } = require('./admin');
const { setupPing } = require('./ping');
const { setupScheduler } = require('./scheduler');

// –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Express –∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
app.use(express.json());

// –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Å–µ—Ö callback –∑–∞–ø—Ä–æ—Å–æ–≤
bot.on('callback_query', (ctx, next) => {
  console.log('=========== CALLBACK QUERY RECEIVED ===========');
  console.log('Data:', ctx.callbackQuery.data);
  console.log('From user:', ctx.from.id);
  console.log('Message ID:', ctx.callbackQuery.message.message_id);
  console.log('===============================================');
  
  // –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —Ü–µ–ø–æ—á–∫–∏ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
  return next();
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥
bot.start(handleStart);

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è inline-–∫–Ω–æ–ø–æ–∫
bot.action('show_products', async (ctx) => {
  try {
    await ctx.reply(
      'üìö –í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–æ–¥—É–∫—Ç:',
      {
        reply_markup: {
          inline_keyboard: [
            [{ text: 'üî∞ –°—Ç–∞—Ä—Ç–æ–≤—ã–π –∫–æ–º–ø–ª–µ–∫—Ç - 990 ‚ÇΩ', callback_data: 'buy_starter' }],
            [{ text: 'üë§ –ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–æ–µ –∑–∞–Ω—è—Ç–∏–µ - 2 000 ‚ÇΩ', callback_data: 'buy_individual' }],
            [{ text: 'üéØ –ü–∞–∫–µ—Ç 3 –∑–∞–Ω—è—Ç–∏—è - 4500 ‚ÇΩ', callback_data: 'buy_package' }],
            [{ text: 'üèÜ –ü–æ–ª–Ω—ã–π –∫—É—Ä—Å –≤–∏–¥–µ–æ—É—Ä–æ–∫–æ–≤ - 14 999 ‚ÇΩ [üîÑ –í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ]', callback_data: 'product_in_development' }],
            [{ text: '‚óÄÔ∏è –ù–∞–∑–∞–¥', callback_data: 'back_to_menu' }]
          ]
        }
      }
    );
    
    await ctx.answerCbQuery();
    logWithTime(`–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${ctx.from.id} –æ—Ç–∫—Ä—ã–ª –º–µ–Ω—é –≤—ã–±–æ—Ä–∞ –ø—Ä–æ–¥—É–∫—Ç–∞`);
  } catch (error) {
    console.error(`–û—à–∏–±–∫–∞ –≤ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–µ "–ö—É–ø–∏—Ç—å –∫—É—Ä—Å": ${error.message}`);
    await ctx.answerCbQuery('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞');
  }
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –ø—Ä–æ–¥—É–∫—Ç–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ
bot.action('product_in_development', async (ctx) => {
  try {
    await ctx.reply(
      'üîÑ *–ü—Ä–æ–¥—É–∫—Ç –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ*\n\n–ü–æ–ª–Ω—ã–π –∫—É—Ä—Å –≤–∏–¥–µ–æ—É—Ä–æ–∫–æ–≤ –≤ –Ω–∞—Å—Ç–æ—è—â–µ–µ –≤—Ä–µ–º—è –¥–æ—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è, —á—Ç–æ–±—ã –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏—Ç—å –≤–∞–º –Ω–∞–∏–ª—É—á—à–∏–π –æ–ø—ã—Ç –æ–±—É—á–µ–Ω–∏—è.\n\n–ú—ã —É–≤–µ–¥–æ–º–∏–º –≤–∞—Å, –∫–æ–≥–¥–∞ –æ–Ω –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–µ–Ω –¥–ª—è –ø–æ–∫—É–ø–∫–∏. –í –Ω–∞—Å—Ç–æ—è—â–µ–µ –≤—Ä–µ–º—è –≤—ã –º–æ–∂–µ—Ç–µ –ø—Ä–∏–æ–±—Ä–µ—Å—Ç–∏ –¥—Ä—É–≥–∏–µ –Ω–∞—à–∏ –ø—Ä–æ–¥—É–∫—Ç—ã.',
      { 
        parse_mode: 'Markdown',
        reply_markup: {
          inline_keyboard: [
            [{ text: 'üîô –í–µ—Ä–Ω—É—Ç—å—Å—è –∫ —Å–ø–∏—Å–∫—É –ø—Ä–æ–¥—É–∫—Ç–æ–≤', callback_data: 'show_products' }]
          ]
        }
      }
    );
    
    await ctx.answerCbQuery('–≠—Ç–æ—Ç –ø—Ä–æ–¥—É–∫—Ç –ø–æ–∫–∞ –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ');
    logWithTime(`–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${ctx.from.id} –ø–æ–ø—ã—Ç–∞–ª—Å—è –≤—ã–±—Ä–∞—Ç—å –ø—Ä–æ–¥—É–∫—Ç –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ`);
  } catch (error) {
    console.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –ø—Ä–æ–¥—É–∫—Ç–∞ –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ: ${error.message}`);
    await ctx.answerCbQuery('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞');
  }
});

bot.action('back_to_menu', async (ctx) => {
  try {
    await ctx.editMessageText(
      '–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:',
      mainKeyboard()
    );
    await ctx.answerCbQuery();
  } catch (error) {
    console.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤–æ–∑–≤—Ä–∞—Ç–µ –≤ –º–µ–Ω—é: ${error.message}`);
    await ctx.answerCbQuery('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞');
  }
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–æ–∫—É–ø–æ–∫ - –¢–û–õ–¨–ö–û –û–î–ò–ù –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –≤—ã–±–æ—Ä–∞ –ø—Ä–æ–¥—É–∫—Ç–æ–≤
bot.action(/buy_(.+)/, handleBuyAction);

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –ø—Ä–æ—Å—Ç–æ–π –∫–Ω–æ–ø–∫–∏ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞ - —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –¥–ª—è –≤—Å–µ—Ö –ø—Ä–æ–¥—É–∫—Ç–æ–≤
bot.action(/confirm_simple_(.+)/, async (ctx) => {
  console.log('========== –£–ü–†–û–©–ï–ù–ù–´–ô –û–ë–†–ê–ë–û–¢–ß–ò–ö –ó–ê–ü–£–©–ï–ù ==========');
  const productId = ctx.match[1];
  const userId = ctx.from.id;
  console.log(`–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${userId} –Ω–∞–∂–∞–ª –Ω–∞ –ø—Ä–æ—Å—Ç—É—é –∫–Ω–æ–ø–∫—É –¥–ª—è –ø—Ä–æ–¥—É–∫—Ç–∞ ${productId}`);
  
  try {
    // –ü–æ–ª—É—á–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π –ø—Ä–æ–¥—É–∫—Ç
    const product = products[productId];
    
    if (!product) {
      console.error(`–ü—Ä–æ–¥—É–∫—Ç —Å ID ${productId} –Ω–µ –Ω–∞–π–¥–µ–Ω`);
      await ctx.answerCbQuery('–ü—Ä–æ–¥—É–∫—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω');
      return false;
    }
    
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ email
    await ctx.reply(
      messageTemplates.emailRequest(product.name),
      { parse_mode: 'Markdown' }
    );
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤—ã–±—Ä–∞–Ω–Ω–æ–º –ø—Ä–æ–¥—É–∫—Ç–µ
    global.botData.pendingOrders[userId] = {
      productId: productId,
      status: 'waiting_email',
      timestamp: new Date().toISOString(),
      simpleHandler: true
    };
    
    await ctx.answerCbQuery('‚úÖ –ù–∞—á–∏–Ω–∞–µ–º –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞');
    console.log(`–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${userId} –Ω–∞—á–∞–ª –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ —á–µ—Ä–µ–∑ –ø—Ä–æ—Å—Ç—É—é –∫–Ω–æ–ø–∫—É –¥–ª—è –ø—Ä–æ–¥—É–∫—Ç–∞ ${productId}`);
    logWithTime(`[CONFIRM_SIMPLE] –ù–∞—á–∞—Ç–æ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${userId}, –ø—Ä–æ–¥—É–∫—Ç: ${product.name}`);
    return true;
  } catch (error) {
    console.error(`–û—à–∏–±–∫–∞ –≤ –ø—Ä–æ—Å—Ç–æ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–µ: ${error.message}`);
    console.error(`Stack trace: ${error.stack}`);
    await ctx.answerCbQuery('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞');
    return false;
  }
});

// –ó–∞–≥—Ä—É–∂–∞–µ–º –æ—Å—Ç–∞–ª—å–Ω—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∏–∑ –æ—Ç–¥–µ–ª—å–Ω–æ–≥–æ —Ñ–∞–π–ª–∞
require('./bot_handlers');
