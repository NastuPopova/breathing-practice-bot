// –§–∞–π–ª: semi-auto-telegram-bot.js
// –û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–æ–ª—É–∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –±–æ—Ç –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞–∫–∞–∑–æ–≤ –∫—É—Ä—Å–æ–≤

const { Telegraf, Markup } = require('telegraf');
require('dotenv').config();
const fs = require('fs');
const path = require('path');

// –°–æ–∑–¥–∞–Ω–∏–µ –±–æ—Ç–∞ —Å —Ç–æ–∫–µ–Ω–æ–º –æ—Ç BotFather
const bot = new Telegraf(process.env.BOT_TOKEN);

// ID –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ (–≤–∞—à Telegram ID)
const ADMIN_ID = process.env.ADMIN_ID;

// –î–∞–Ω–Ω—ã–µ –ø—Ä–æ–¥—É–∫—Ç–æ–≤
const products = {
  'starter': {
    id: 'starter',
    name: '–°—Ç–∞—Ä—Ç–æ–≤—ã–π –∫–æ–º–ø–ª–µ–∫—Ç –¥—ã—Ö–∞—Ç–µ–ª—å–Ω—ã—Ö –ø—Ä–∞–∫—Ç–∏–∫',
    price: '990 ‚ÇΩ',
    description: '–í–∏–¥–µ–æ—É—Ä–æ–∫ (20 –º–∏–Ω—É—Ç) —Å –±–∞–∑–æ–≤—ã–º–∏ —Ç–µ—Ö–Ω–∏–∫–∞–º–∏ + PDF-–∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è + –±–æ–Ω—É—Å–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã',
    pdfFile: 'files/starter-kit-guide.pdf',
    videoLink: 'https://yourvideo.com/starter'
  },
  'consultation': {
    id: 'consultation',
    name: '–ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–∞—è –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è',
    price: '1500 ‚ÇΩ',
    description: '–ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–∞—è 40-–º–∏–Ω—É—Ç–Ω–∞—è –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è + —Ä–∞–∑–±–æ—Ä –≤–∞—à–µ–π —Ç–µ—Ö–Ω–∏–∫–∏ –¥—ã—Ö–∞–Ω–∏—è',
    pdfFile: 'files/consultation-guide.pdf',
    videoLink: 'https://yourvideo.com/consultation-intro'
  },
  'course': {
    id: 'course',
    name: '–ü–æ–ª–Ω—ã–π –∫—É—Ä—Å –≤–∏–¥–µ–æ—É—Ä–æ–∫–æ–≤',
    price: '14 999 ‚ÇΩ',
    description: '4 –º–æ–¥—É–ª—è —Å –≤–∏–¥–µ–æ—É—Ä–æ–∫–∞–º–∏ + –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ –∑–∞–Ω—è—Ç–∏—è + –¥–æ—Å—Ç—É–ø –∫ —Å–æ–æ–±—â–µ—Å—Ç–≤—É',
    pdfFile: 'files/full-course-guide.pdf',
    videoLink: 'https://yourvideo.com/course-intro'
  }
};

// –•—Ä–∞–Ω–µ–Ω–∏–µ —Ç–µ–∫—É—â–∏—Ö –∑–∞–∫–∞–∑–æ–≤
const pendingOrders = {};
// –ò–∑–º–µ–Ω–µ–Ω–æ: —Ö—Ä–∞–Ω–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã—Ö –∑–∞–∫–∞–∑–æ–≤ –∫–∞–∫ –º–∞—Å—Å–∏–≤–æ–≤ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
const completedOrders = {};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –æ—Å–Ω–æ–≤–Ω–æ–π –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
function mainKeyboard() {
  return Markup.keyboard([
    ['üõí –ö—É–ø–∏—Ç—å –∫—É—Ä—Å', '‚ùì –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è'],
    ['üìù –ú–æ–∏ –ø–æ–∫—É–ø–∫–∏', '‚òéÔ∏è –°–≤—è–∑–∞—Ç—å—Å—è —Å –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–º']
  ]).resize();
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è —Ñ–∞–π–ª–∞
function fileExists(filePath) {
  return new Promise(resolve => {
    fs.access(filePath, fs.constants.F_OK, err => {
      resolve(!err);
    });
  });
}

// –§—É–Ω–∫—Ü–∏—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è —Å –¥–∞—Ç–æ–π –∏ –≤—Ä–µ–º–µ–Ω–µ–º
function logWithTime(message) {
  const now = new Date().toISOString();
  console.log(`[${now}] ${message}`);
}

// –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
bot.start(async (ctx) => {
  try {
    const userId = ctx.from.id;
    
    await ctx.reply(
      `üëã –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é, ${ctx.from.first_name}!\n\n–Ø –±–æ—Ç –ê–Ω–∞—Å—Ç–∞—Å–∏–∏ –ü–æ–ø–æ–≤–æ–π, –∏–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–∞ –ø–æ –¥—ã—Ö–∞—Ç–µ–ª—å–Ω—ã–º –ø—Ä–∞–∫—Ç–∏–∫–∞–º. –ß–µ—Ä–µ–∑ –º–µ–Ω—è –≤—ã –º–æ–∂–µ—Ç–µ –ø—Ä–∏–æ–±—Ä–µ—Å—Ç–∏ –∫—É—Ä—Å—ã –∏ –ø–æ–ª—É—á–∏—Ç—å –º–∞—Ç–µ—Ä–∏–∞–ª—ã.\n\n–ß–µ–º –º–æ–≥—É –ø–æ–º–æ—á—å?`,
      mainKeyboard()
    );

    // –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É –æ –Ω–æ–≤–æ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
    if (userId !== parseInt(ADMIN_ID)) {
      await bot.telegram.sendMessage(
        ADMIN_ID,
        `üÜï –ù–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:\n- –ò–º—è: ${ctx.from.first_name} ${ctx.from.last_name || ''}\n- Username: @${ctx.from.username || '–æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç'}\n- ID: ${userId}`
      );
    }
    
    logWithTime(`–ù–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: ${userId}, ${ctx.from.username || '–±–µ–∑ username'}`);
  } catch (error) {
    console.error(`–û—à–∏–±–∫–∞ –≤ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–µ /start: ${error.message}`);
  }
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–ö—É–ø–∏—Ç—å –∫—É—Ä—Å"
bot.hears('üõí –ö—É–ø–∏—Ç—å –∫—É—Ä—Å', async (ctx) => {
  try {
    await ctx.reply(
      'üìö –í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–æ–¥—É–∫—Ç:',
      Markup.inlineKeyboard([
        [Markup.button.callback('üî∞ –°—Ç–∞—Ä—Ç–æ–≤—ã–π –∫–æ–º–ø–ª–µ–∫—Ç - 990 ‚ÇΩ', 'buy_starter')],
        [Markup.button.callback('üë• –ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–∞—è –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è - 1500 ‚ÇΩ', 'buy_consultation')],
        [Markup.button.callback('üèÜ –ü–æ–ª–Ω—ã–π –∫—É—Ä—Å –≤–∏–¥–µ–æ—É—Ä–æ–∫–æ–≤ - 14 999 ‚ÇΩ', 'buy_course')]
      ])
    );
    
    logWithTime(`–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${ctx.from.id} –æ—Ç–∫—Ä—ã–ª –º–µ–Ω—é –≤—ã–±–æ—Ä–∞ –ø—Ä–æ–¥—É–∫—Ç–∞`);
  } catch (error) {
    console.error(`–û—à–∏–±–∫–∞ –≤ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–µ "–ö—É–ø–∏—Ç—å –∫—É—Ä—Å": ${error.message}`);
  }
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –ø–æ–∫—É–ø–∫–∏ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –ø—Ä–æ–¥—É–∫—Ç–æ–≤
bot.action(/buy_(.+)/, async (ctx) => {
  try {
    const productId = ctx.match[1];
    const userId = ctx.from.id;
    const product = products[productId];
    
    if (!product) {
      await ctx.reply('‚ùå –ü—Ä–æ–¥—É–∫—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –∏–∑ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤.');
      return await ctx.answerCbQuery();
    }

    // –ó–∞–ø—Ä–æ—Å –∫–æ–Ω—Ç–∞–∫—Ç–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
    await ctx.reply(
      `üìã –í—ã –≤—ã–±—Ä–∞–ª–∏: *${product.name}*\n\n–î–ª—è –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –≤–∞—à email.\n\n–ü—Ä–∏–º–µ—Ä: email@example.com`,
      { parse_mode: 'Markdown' }
    );
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤—ã–±—Ä–∞–Ω–Ω–æ–º –ø—Ä–æ–¥—É–∫—Ç–µ
    pendingOrders[userId] = {
      productId,
      status: 'waiting_email',
      timestamp: new Date().toISOString()
    };
    
    logWithTime(`–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${userId} –≤—ã–±—Ä–∞–ª –ø—Ä–æ–¥—É–∫—Ç: ${product.name}`);
    await ctx.answerCbQuery();
  } catch (error) {
    console.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–±–æ—Ä–µ –ø—Ä–æ–¥—É–∫—Ç–∞: ${error.message}`);
    await ctx.reply('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.');
    await ctx.answerCbQuery('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞');
  }
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è email
bot.on('text', async (ctx) => {
  try {
    const userId = ctx.from.id;
    const text = ctx.message.text;
    
    // –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –∫–æ–º–∞–Ω–¥—ã –∏ –∫–Ω–æ–ø–∫–∏ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é
    if (text.startsWith('/') || 
        ['üõí –ö—É–ø–∏—Ç—å –∫—É—Ä—Å', '‚ùì –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è', 'üìù –ú–æ–∏ –ø–æ–∫—É–ø–∫–∏', '‚òéÔ∏è –°–≤—è–∑–∞—Ç—å—Å—è —Å –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–º'].includes(text)) {
      return;
    }
    
    // –û–±—Ä–∞–±–æ—Ç–∫–∞ email
    if (pendingOrders[userId] && pendingOrders[userId].status === 'waiting_email') {
      // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∞ email
      const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
      if (!emailRegex.test(text)) {
        return await ctx.reply('‚ùå –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π email –∞–¥—Ä–µ—Å.');
      }
      
      // –°–æ—Ö—Ä–∞–Ω—è–µ–º email
      pendingOrders[userId].email = text;
      pendingOrders[userId].status = 'waiting_phone';
      
      // –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞
      await ctx.reply(
        'üì± –¢–µ–ø–µ—Ä—å, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –≤–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –¥–ª—è —Å–≤—è–∑–∏.\n\n–ü—Ä–∏–º–µ—Ä: +7XXXXXXXXXX'
      );
      
      logWithTime(`–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${userId} –≤–≤–µ–ª email: ${text}`);
    } 
    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞
    else if (pendingOrders[userId] && pendingOrders[userId].status === 'waiting_phone') {
      // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞
      const phoneRegex = /^\+?[0-9]{10,15}$/;
      const cleanedPhone = text.replace(/\s+/g, '');
      
      if (!phoneRegex.test(cleanedPhone)) {
        return await ctx.reply('‚ùå –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞.');
      }
      
      // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–µ–ª–µ—Ñ–æ–Ω –∏ –æ–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å
      pendingOrders[userId].phone = cleanedPhone;
      pendingOrders[userId].status = 'waiting_payment';
      
      const product = products[pendingOrders[userId].productId];
      
      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ –æ–ø–ª–∞—Ç–µ
      await ctx.reply(
        `‚úÖ –°–ø–∞—Å–∏–±–æ! –í–∞—à –∑–∞–∫–∞–∑ –ø–æ—á—Ç–∏ –≥–æ—Ç–æ–≤.\n\n*${product.name}*\n–°—Ç–æ–∏–º–æ—Å—Ç—å: *${product.price}*\n\n–û–∂–∏–¥–∞–π—Ç–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –æ–ø–ª–∞—Ç–µ –æ—Ç –ê–Ω–∞—Å—Ç–∞—Å–∏–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.`,
        { parse_mode: 'Markdown', ...mainKeyboard() }
      );
      
      logWithTime(`–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${userId} –≤–≤–µ–ª —Ç–µ–ª–µ—Ñ–æ–Ω: ${cleanedPhone}`);
      
      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É
      await notifyAdmin(userId);
    }
  } catch (error) {
    console.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è: ${error.message}`);
  }
});

// –û—Ç–¥–µ–ª—å–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–æ–º–∞–Ω–¥ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
bot.hears(/^\/confirm_(\d+)$/, async (ctx) => {
  try {
    if (ctx.from.id.toString() !== ADMIN_ID.toString()) {
      return;
    }
    
    const clientId = ctx.match[1];
    await confirmPayment(clientId);
    
    logWithTime(`–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –ø–æ–¥—Ç–≤–µ—Ä–¥–∏–ª –æ–ø–ª–∞—Ç—É –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${clientId}`);
  } catch (error) {
    console.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏ –æ–ø–ª–∞—Ç—ã: ${error.message}`);
    await ctx.reply(`‚ùå –û—à–∏–±–∫–∞: ${error.message}`);
  }
});

// –û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É –æ –Ω–æ–≤–æ–º –∑–∞–∫–∞–∑–µ
async function notifyAdmin(userId) {
  try {
    const order = pendingOrders[userId];
    const product = products[order.productId];
    
    // –ë–æ–ª–µ–µ –±–µ–∑–æ–ø–∞—Å–Ω–æ–µ –ø–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
    let userInfo = { first_name: '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å', last_name: '' };
    try {
      userInfo = await bot.telegram.getChat(userId);
    } catch (error) {
      console.error(`–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ ${userId}: ${error.message}`);
    }
    
    // –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –∞–¥–º–∏–Ω–∞
    const message = `
üîî *–ù–û–í–´–ô –ó–ê–ö–ê–ó*
  
üì¶ –ü—Ä–æ–¥—É–∫—Ç: *${product.name}*
üí∞ –¶–µ–Ω–∞: *${product.price}*
  
üë§ –ö–ª–∏–µ–Ω—Ç: ${userInfo.first_name} ${userInfo.last_name || ''}
üÜî ID: \`${userId}\`
üìß Email: ${order.email}
üì± –¢–µ–ª–µ—Ñ–æ–Ω: ${order.phone}
üïí –í—Ä–µ–º—è –∑–∞–∫–∞–∑–∞: ${new Date().toLocaleString()}
  
–î–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –æ–ø–ª–∞—Ç—ã –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É:
\`/confirm_${userId}\`
`;
    
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É
    await bot.telegram.sendMessage(ADMIN_ID, message, { 
      parse_mode: 'Markdown',
      reply_markup: {
        inline_keyboard: [
          [{ text: '‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –æ–ø–ª–∞—Ç—É', callback_data: `confirm_payment_${userId}` }],
          [{ text: '‚ùå –û—Ç–º–µ–Ω–∏—Ç—å –∑–∞–∫–∞–∑', callback_data: `cancel_order_${userId}` }],
          [{ text: 'üí¨ –ù–∞–ø–∏—Å–∞—Ç—å –∫–ª–∏–µ–Ω—Ç—É', callback_data: `message_client_${userId}` }]
        ]
      }
    });
    
    logWithTime(`–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É –æ –∑–∞–∫–∞–∑–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${userId}`);
  } catch (error) {
    console.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É: ${error.message}`);
  }
}

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –æ–ø–ª–∞—Ç—ã —á–µ—Ä–µ–∑ –∫–Ω–æ–ø–∫—É
bot.action(/confirm_payment_(\d+)/, async (ctx) => {
  try {
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
    if (ctx.from.id.toString() !== ADMIN_ID.toString()) {
      return await ctx.answerCbQuery('‚õî –£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–π —Ñ—É–Ω–∫—Ü–∏–∏');
    }
    
    const clientId = ctx.match[1];
    await confirmPayment(clientId);
    await ctx.answerCbQuery('‚úÖ –û–ø–ª–∞—Ç–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞. –ú–∞—Ç–µ—Ä–∏–∞–ª—ã –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã –∫–ª–∏–µ–Ω—Ç—É.');
    
    logWithTime(`–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –ø–æ–¥—Ç–≤–µ—Ä–¥–∏–ª –æ–ø–ª–∞—Ç—É —á–µ—Ä–µ–∑ –∫–Ω–æ–ø–∫—É –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${clientId}`);
  } catch (error) {
    console.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏ –æ–ø–ª–∞—Ç—ã —á–µ—Ä–µ–∑ –∫–Ω–æ–ø–∫—É: ${error.message}`);
    await ctx.answerCbQuery(`‚ùå –û—à–∏–±–∫–∞: ${error.message.substring(0, 50)}`);
  }
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—Ç–º–µ–Ω—ã –∑–∞–∫–∞–∑–∞
bot.action(/cancel_order_(\d+)/, async (ctx) => {
  try {
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
    if (ctx.from.id.toString() !== ADMIN_ID.toString()) {
      return await ctx.answerCbQuery('‚õî –£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–π —Ñ—É–Ω–∫—Ü–∏–∏');
    }
    
    const clientId = ctx.match[1];
    
    if (pendingOrders[clientId]) {
      const product = products[pendingOrders[clientId].productId];
      
      // –£–≤–µ–¥–æ–º–ª—è–µ–º –∫–ª–∏–µ–Ω—Ç–∞
      await bot.telegram.sendMessage(
        clientId,
        `‚ùå –í–∞—à –∑–∞–∫–∞–∑ "${product.name}" –±—ã–ª –æ—Ç–º–µ–Ω–µ–Ω.\n\n–ï—Å–ª–∏ —É –≤–∞—Å –≤–æ–∑–Ω–∏–∫–ª–∏ –≤–æ–ø—Ä–æ—Å—ã, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –ê–Ω–∞—Å—Ç–∞—Å–∏–µ–π.`,
        mainKeyboard()
      );
      
      // –£–¥–∞–ª—è–µ–º –∑–∞–∫–∞–∑ –∏–∑ –æ–∂–∏–¥–∞—é—â–∏—Ö
      delete pendingOrders[clientId];
      
      await ctx.reply(`‚úÖ –ó–∞–∫–∞–∑ –∫–ª–∏–µ–Ω—Ç–∞ ${clientId} –æ—Ç–º–µ–Ω–µ–Ω.`);
      logWithTime(`–ó–∞–∫–∞–∑ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${clientId} –æ—Ç–º–µ–Ω–µ–Ω –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º`);
    } else {
      await ctx.reply('‚ùå –ó–∞–∫–∞–∑ –Ω–µ –Ω–∞–π–¥–µ–Ω.');
    }
    
    await ctx.answerCbQuery();
  } catch (error) {
    console.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–º–µ–Ω–µ –∑–∞–∫–∞–∑–∞: ${error.message}`);
    await ctx.answerCbQuery('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞');
  }
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –∫–ª–∏–µ–Ω—Ç—É
bot.action(/message_client_(\d+)/, async (ctx) => {
  try {
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
    if (ctx.from.id.toString() !== ADMIN_ID.toString()) {
      return await ctx.answerCbQuery('‚õî –£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–π —Ñ—É–Ω–∫—Ü–∏–∏');
    }
    
    const clientId = ctx.match[1];
    
    await ctx.reply(
      `‚úèÔ∏è –í–≤–µ–¥–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –∫–ª–∏–µ–Ω—Ç–∞ ID: ${clientId}\n\n–§–æ—Ä–º–∞—Ç:\n/msg_${clientId} –¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è`
    );
    
    await ctx.answerCbQuery();
  } catch (error) {
    console.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥–≥–æ—Ç–æ–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è –∫–ª–∏–µ–Ω—Ç—É: ${error.message}`);
    await ctx.answerCbQuery('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞');
  }
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –∫–ª–∏–µ–Ω—Ç—É
bot.hears(/^\/msg_(\d+) (.+)$/, async (ctx) => {
  try {
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
    if (ctx.from.id.toString() !== ADMIN_ID.toString()) {
      return;
    }
    
    const clientId = ctx.match[1];
    const message = ctx.match[2];
    
    await bot.telegram.sendMessage(
      clientId,
      `üì¨ *–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ê–Ω–∞—Å—Ç–∞—Å–∏–∏*:\n\n${message}`,
      { parse_mode: 'Markdown' }
    );
    
    await ctx.reply('‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –∫–ª–∏–µ–Ω—Ç—É.');
    logWithTime(`–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –æ—Ç–ø—Ä–∞–≤–∏–ª —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ${clientId}`);
  } catch (error) {
    console.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è –∫–ª–∏–µ–Ω—Ç—É: ${error.message}`);
    await ctx.reply(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è: ${error.message}`);
  }
});

// –§—É–Ω–∫—Ü–∏—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –æ–ø–ª–∞—Ç—ã –∏ –æ—Ç–ø—Ä–∞–≤–∫–∏ –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤
async function confirmPayment(clientId) {
  try {
    const order = pendingOrders[clientId];
    
    if (!order) {
      await bot.telegram.sendMessage(ADMIN_ID, '‚ùå –ó–∞–∫–∞–∑ –Ω–µ –Ω–∞–π–¥–µ–Ω.');
      return;
    }
    
    const product = products[order.productId];
    
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏
    await bot.telegram.sendMessage(
      clientId,
      `üéâ *–û–ø–ª–∞—Ç–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞!*\n\n–°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–∫—É–ø–∫—É "*${product.name}*". –í–∞—à–∏ –º–∞—Ç–µ—Ä–∏–∞–ª—ã –±—É–¥—É—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã —á–µ—Ä–µ–∑ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–µ–∫—É–Ω–¥.`,
      { parse_mode: 'Markdown' }
    );
    
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º PDF-–∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥
    setTimeout(async () => {
      try {
        // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è —Ñ–∞–π–ª–∞
        const filePathExists = await fileExists(product.pdfFile);
        
        if (filePathExists) {
          await bot.telegram.sendDocument(
            clientId,
            { source: product.pdfFile },
            { 
              caption: 'üìö –í–æ—Ç –≤–∞—à–∞ PDF-–∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ –¥—ã—Ö–∞—Ç–µ–ª—å–Ω—ã–º –ø—Ä–∞–∫—Ç–∏–∫–∞–º.\n\n–°–æ—Ö—Ä–∞–Ω–∏—Ç–µ –µ–µ –¥–ª—è —É–¥–æ–±–Ω–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞ –≤ –ª—é–±–æ–µ –≤—Ä–µ–º—è!' 
            }
          );
          logWithTime(`PDF –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ${clientId}`);
        } else {
          console.error(`PDF —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: ${product.pdfFile}`);
          await bot.telegram.sendMessage(
            clientId,
            '‚ùó –í–æ–∑–Ω–∏–∫–ª–∞ –ø—Ä–æ–±–ª–µ–º–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ PDF. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–ø–∏—à–∏—Ç–µ –Ω–∞–º, –∏ –º—ã —Ä–µ—à–∏–º —ç—Ç—É –ø—Ä–æ–±–ª–µ–º—É.'
          );
          await bot.telegram.sendMessage(
            ADMIN_ID, 
            `‚ùå –û—à–∏–±–∫–∞: —Ñ–∞–π–ª ${product.pdfFile} –Ω–µ –Ω–∞–π–¥–µ–Ω`
          );
        }
      } catch (error) {
        console.error(`Error sending PDF: ${error.message}`);
        await bot.telegram.sendMessage(
          clientId,
          '‚ùó –í–æ–∑–Ω–∏–∫–ª–∞ –ø—Ä–æ–±–ª–µ–º–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ PDF. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–ø–∏—à–∏—Ç–µ –Ω–∞–º, –∏ –º—ã —Ä–µ—à–∏–º —ç—Ç—É –ø—Ä–æ–±–ª–µ–º—É.'
        );
        await bot.telegram.sendMessage(
          ADMIN_ID, 
          `‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ PDF: ${error.message}`
        );
      }
    }, 5000);
    
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤–∏–¥–µ–æ—É—Ä–æ–∫ —á–µ—Ä–µ–∑ 10 —Å–µ–∫—É–Ω–¥
    setTimeout(async () => {
      try {
        await bot.telegram.sendMessage(
          clientId,
          `üé¨ *–í–∞—à –≤–∏–¥–µ–æ—É—Ä–æ–∫ –≥–æ—Ç–æ–≤ –∫ –ø—Ä–æ—Å–º–æ—Ç—Ä—É!*\n\n${product.description}\n\nüîó *–°—Å—ã–ª–∫–∞ –Ω–∞ –≤–∏–¥–µ–æ*: ${product.videoLink}\n\n–ü—Ä–∏—è—Ç–Ω–æ–≥–æ –æ–±—É—á–µ–Ω–∏—è!`,
          {
            parse_mode: 'Markdown',
            disable_web_page_preview: false,
            reply_markup: {
              inline_keyboard: [
                [{ text: 'üé¨ –°–º–æ—Ç—Ä–µ—Ç—å –≤–∏–¥–µ–æ—É—Ä–æ–∫', url: product.videoLink }]
              ]
            }
          }
        );
        
        logWithTime(`–í–∏–¥–µ–æ—É—Ä–æ–∫ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ${clientId}`);
        
        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
        setTimeout(async () => {
          await bot.telegram.sendMessage(
            clientId,
            `üìå *–í–∞–∂–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è*:\n\n‚Ä¢ –í–∏–¥–µ–æ –¥–æ—Å—Ç—É–ø–Ω–æ –±–µ–∑ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π –ø–æ –≤—Ä–µ–º–µ–Ω–∏\n‚Ä¢ –ü—Ä–∏ –≤–æ–∑–Ω–∏–∫–Ω–æ–≤–µ–Ω–∏–∏ –≤–æ–ø—Ä–æ—Å–æ–≤ –ø–∏—à–∏—Ç–µ –ø—Ä—è–º–æ –≤ —ç—Ç–æ—Ç —á–∞—Ç\n‚Ä¢ –î–ª—è –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π –ø–æ–ª—å–∑—ã —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ–º —Å–º–æ—Ç—Ä–µ—Ç—å –≤–∏–¥–µ–æ –≤ —Å–ø–æ–∫–æ–π–Ω–æ–π –æ–±—Å—Ç–∞–Ω–æ–≤–∫–µ\n\n–í—Å–µ–≥–æ –¥–æ–±—Ä–æ–≥–æ! üôè`,
            { parse_mode: 'Markdown' }
          );
        }, 5000);
      } catch (error) {
        console.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –≤–∏–¥–µ–æ—É—Ä–æ–∫–∞: ${error.message}`);
        await bot.telegram.sendMessage(
          ADMIN_ID, 
          `‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –≤–∏–¥–µ–æ—É—Ä–æ–∫–∞: ${error.message}`
        );
      }
    }, 10000);
    
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –º–∞—Å—Å–∏–≤ –∑–∞–∫–∞–∑–æ–≤ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –µ—Å–ª–∏ –µ–≥–æ –µ—â–µ –Ω–µ—Ç
    if (!completedOrders[clientId]) {
      completedOrders[clientId] = [];
    }
    
    // –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–∫–∞–∑ –≤ –∏—Å—Ç–æ—Ä–∏—é –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã—Ö
    completedOrders[clientId].push({
      ...order,
      completedAt: new Date().toISOString(),
      status: 'completed'
    });
    
    delete pendingOrders[clientId];
    
    // –£–≤–µ–¥–æ–º–ª—è–µ–º –∞–¥–º–∏–Ω–∞
    await bot.telegram.sendMessage(
      ADMIN_ID,
      `‚úÖ –ú–∞—Ç–µ—Ä–∏–∞–ª—ã —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã –∫–ª–∏–µ–Ω—Ç—É (ID: ${clientId}).\n–ü—Ä–æ–¥—É–∫—Ç: ${product.name}`
    );
    
    logWithTime(`–ó–∞–∫–∞–∑ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${clientId} –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ`);
  } catch (error) {
    console.error(`Error in confirmPayment: ${error.message}`);
    await bot.telegram.sendMessage(
      ADMIN_ID,
      `‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è: ${error.message}`
    );
  }
}

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –ø–æ–∫—É–ø–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
bot.hears('üìù –ú–æ–∏ –ø–æ–∫—É–ø–∫–∏', async (ctx) => {
  try {
    const userId = ctx.from.id;
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã–µ –∑–∞–∫–∞–∑—ã
    if (completedOrders[userId] && completedOrders[userId].length > 0) {
      let message = 'üõç *–í–∞—à–∏ –ø–æ–∫—É–ø–∫–∏*:\n\n';
      
      completedOrders[userId].forEach((order, index) => {
        const product = products[order.productId];
        const date = new Date(order.completedAt).toLocaleDateString();
        
        message += `${index + 1}. *${product.name}*\n   –î–∞—Ç–∞: ${date}\n   –°—Ç–∞—Ç—É—Å: ‚úÖ –û–ø–ª–∞—á–µ–Ω–æ\n\n`;
      });
      
      message += '–ï—Å–ª–∏ –≤–∞–º –Ω—É–∂–Ω—ã –ø–æ–≤—Ç–æ—Ä–Ω–æ –∫–∞–∫–∏–µ-—Ç–æ –º–∞—Ç–µ—Ä–∏–∞–ª—ã, –ø—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ –≤ —á–∞—Ç.';
      
      await ctx.reply(message, { parse_mode: 'Markdown' });
      logWithTime(`–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${userId} –ø—Ä–æ—Å–º–æ—Ç—Ä–µ–ª —Å–≤–æ–∏ –ø–æ–∫—É–ø–∫–∏`);
    } else {
      await ctx.reply('–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã—Ö –ø–æ–∫—É–ø–æ–∫. –í—ã–±–µ—Ä–∏—Ç–µ "üõí –ö—É–ø–∏—Ç—å –∫—É—Ä—Å", —á—Ç–æ–±—ã –ø—Ä–∏–æ–±—Ä–µ—Å—Ç–∏ –º–∞—Ç–µ—Ä–∏–∞–ª—ã.');
    }
  } catch (error) {
    console.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ –ø–æ–∫—É–ø–æ–∫: ${error.message}`);
    await ctx.reply('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –≤–∞—à–∏—Ö –ø–æ–∫—É–ø–æ–∫. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
  }
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–°–≤—è–∑–∞—Ç—å—Å—è —Å –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–º"
bot.hears('‚òéÔ∏è –°–≤—è–∑–∞—Ç—å—Å—è —Å –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–º', async (ctx) => {
  try {
    await ctx.reply(
      `üë©‚Äçüè´ *–ê–Ω–∞—Å—Ç–∞—Å–∏—è –ü–æ–ø–æ–≤–∞*\n\n–ï—Å–ª–∏ —É –≤–∞—Å –≤–æ–∑–Ω–∏–∫–ª–∏ –≤–æ–ø—Ä–æ—Å—ã –æ –∫—É—Ä—Å–∞—Ö, –¥—ã—Ö–∞—Ç–µ–ª—å–Ω—ã—Ö –ø—Ä–∞–∫—Ç–∏–∫–∞—Ö –∏–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø–æ–ª—É—á–∏—Ç—å –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—É—é –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é, –Ω–∞–ø–∏—à–∏—Ç–µ –º–Ω–µ –Ω–∞–ø—Ä—è–º—É—é.\n\n–Ø –æ—Ç–≤–µ—á–∞—é –≤ —Ç–µ—á–µ–Ω–∏–µ 24 —á–∞—Å–æ–≤ –≤ —Ä–∞–±–æ—á–∏–µ –¥–Ω–∏.`,
      { 
        parse_mode: 'Markdown',
        reply_markup: {
          inline_keyboard: [
            [{ text: '‚úâÔ∏è –ù–∞–ø–∏—Å–∞—Ç—å –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—é', url: 'https://t.me/NastuPopova' }]
          ]
        }
      }
    );
    
    logWithTime(`–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${ctx.from.id} –Ω–∞–∂–∞–ª "–°–≤—è–∑–∞—Ç—å—Å—è —Å –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–º"`);
  } catch (error) {
    console.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ "–°–≤—è–∑–∞—Ç—å—Å—è —Å –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–º": ${error.message}`);
  }
});
  
// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
bot.hears('‚ùì –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è', async (ctx) => {
  try {
    await ctx.reply(
      `‚ÑπÔ∏è *–û –∫—É—Ä—Å–∞—Ö –¥—ã—Ö–∞—Ç–µ–ª—å–Ω—ã—Ö –ø—Ä–∞–∫—Ç–∏–∫*\n\n*–ê–Ω–∞—Å—Ç–∞—Å–∏—è –ü–æ–ø–æ–≤–∞* - —Å–µ—Ä—Ç–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∏–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä –ø–æ –¥—ã—Ö–∞—Ç–µ–ª—å–Ω—ã–º –ø—Ä–∞–∫—Ç–∏–∫–∞–º —Å –æ–ø—ã—Ç–æ–º –±–æ–ª–µ–µ 7 –ª–µ—Ç.\n\n–ù–∞—à–∏ –∫—É—Ä—Å—ã –ø–æ–º–æ–≥—É—Ç –≤–∞–º:\n\n‚Ä¢ –ü–æ–≤—ã—Å–∏—Ç—å –∂–∏–∑–Ω–µ–Ω–Ω—É—é —ç–Ω–µ—Ä–≥–∏—é\n‚Ä¢ –°–Ω–∏–∑–∏—Ç—å —É—Ä–æ–≤–µ–Ω—å —Å—Ç—Ä–µ—Å—Å–∞\n‚Ä¢ –£–ª—É—á—à–∏—Ç—å –∫–∞—á–µ—Å—Ç–≤–æ —Å–Ω–∞\n‚Ä¢ –ü–æ–≤—ã—Å–∏—Ç—å –∏–º–º—É–Ω–∏—Ç–µ—Ç\n‚Ä¢ –£–ª—É—á—à–∏—Ç—å —Ä–∞–±–æ—Ç—É –¥—ã—Ö–∞—Ç–µ–ª—å–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã\n\n–í—ã–±–µ—Ä–∏—Ç–µ "üõí –ö—É–ø–∏—Ç—å –∫—É—Ä—Å" –≤ –º–µ–Ω—é, —á—Ç–æ–±—ã –æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å –¥–æ—Å—Ç—É–ø–Ω—ã–º–∏ –ø—Ä–æ–≥—Ä–∞–º–º–∞–º–∏.`,
      { parse_mode: 'Markdown' }
    );
    
    logWithTime(`–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${ctx.from.id} –∑–∞–ø—Ä–æ—Å–∏–ª –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é`);
  } catch (error) {
    console.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è": ${error.message}`);
  }
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã—Ö –∫–æ–º–∞–Ω–¥
bot.on('message', async (ctx) => {
  try {
    // –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
    if (ctx.message.text && (
      ctx.message.text.startsWith('/') || 
      ['üõí –ö—É–ø–∏—Ç—å –∫—É—Ä—Å', '‚ùì –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è', 'üìù –ú–æ–∏ –ø–æ–∫—É–ø–∫–∏', '‚òéÔ∏è –°–≤—è–∑–∞—Ç—å—Å—è —Å –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–º'].includes(ctx.message.text) ||
      (pendingOrders[ctx.from.id] && 
       (pendingOrders[ctx.from.id].status === 'waiting_email' || 
        pendingOrders[ctx.from.id].status === 'waiting_phone')
      )
    )) {
      return;
    }
    
    // –î–ª—è –æ—Å—Ç–∞–ª—å–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ–¥—Å–∫–∞–∑–∫—É
    await ctx.reply(
      '–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –∏–ª–∏ –Ω–∞–ø–∏—à–∏—Ç–µ /start, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ.',
      mainKeyboard()
    );
  } catch (error) {
    console.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è: ${error.message}`);
  }
});

// –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
bot.launch()
  .then(() => {
    console.log('Bot has been started');
    logWithTime('–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω');
  })
  .catch(err => {
    console.error('Error starting bot:', err);
    logWithTime(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –±–æ—Ç–∞: ${err.message}`);
  });

// Enable graceful stop
process.once('SIGINT', () => {
  bot.stop('SIGINT');
  logWithTime('–ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ø–æ SIGINT');
});
process.once('SIGTERM', () => {
  bot.stop('SIGTERM');
  logWithTime('–ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ø–æ SIGTERM');
});

// –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–æ—Å—Ç–æ–π HTTP-—Å–µ—Ä–≤–µ—Ä –¥–ª—è Render
const http = require('http');
const PORT = process.env.PORT || 3000;

const server = http.createServer((req, res) => {
  res.writeHead(200, { 'Content-Type': 'text/plain' });
  res.end('Bot is running!');
});

server.listen(PORT, () => {
  console.log(`Server running on port ${PORT}`);
  logWithTime(`HTTP-—Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É ${PORT}`);
});
