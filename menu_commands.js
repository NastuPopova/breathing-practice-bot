// –§–∞–π–ª: menu_commands.js
// –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–æ–º–∞–Ω–¥ –º–µ–Ω—é –±–æ—Ç–∞ –∏ –∏—Ö –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤

const { logWithTime } = require('./utils');
const { products, messageTemplates } = require('./data');
const { mainKeyboard, consultationsKeyboard, getUserName } = require('./utils');

/**
 * –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥, –∫–æ—Ç–æ—Ä—ã–µ –±—É–¥—É—Ç –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è –≤ –º–µ–Ω—é –±–æ—Ç–∞
 */
const botCommands = [
  { command: 'start', description: '–ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É —Å –±–æ—Ç–æ–º' },
  { command: 'buy', description: '–ö—É–ø–∏—Ç—å –∫—É—Ä—Å –∏–ª–∏ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é' },
  { command: 'info', description: '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫—É—Ä—Å–∞—Ö' },
  { command: 'purchases', description: '–ú–æ–∏ –ø–æ–∫—É–ø–∫–∏' },
  { command: 'consultations', description: '–ú–æ–∏ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏' },
  { command: 'contact', description: '–°–≤—è–∑–∞—Ç—å—Å—è —Å –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–º' },
  { command: 'help', description: '–ü–æ–ª—É—á–∏—Ç—å –ø–æ–º–æ—â—å' }
];

/**
 * –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–æ–º–∞–Ω–¥ –º–µ–Ω—é –±–æ—Ç–∞
 * @param {Object} bot - –≠–∫–∑–µ–º–ø–ª—è—Ä Telegram –±–æ—Ç–∞
 * @returns {Promise<boolean>} - –†–µ–∑—É–ª—å—Ç–∞—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–æ–º–∞–Ω–¥
 */
async function setupBotCommands(bot) {
  try {
    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–æ–º–∞–Ω–¥—ã –¥–ª—è –≤—Å–µ—Ö —á–∞—Ç–æ–≤ —Å –±–æ—Ç–æ–º
    await bot.telegram.setMyCommands(botCommands);
    logWithTime('‚úÖ –ö–æ–º–∞–Ω–¥—ã –º–µ–Ω—é –±–æ—Ç–∞ —É—Å–ø–µ—à–Ω–æ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã');
    return true;
  } catch (error) {
    console.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ –∫–æ–º–∞–Ω–¥ –º–µ–Ω—é: ${error.message}`);
    logWithTime(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ –∫–æ–º–∞–Ω–¥ –º–µ–Ω—é: ${error.message}`);
    return false;
  }
}

/**
 * –ü—Ä–∏–≤—è–∑–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –∫–æ–º–∞–Ω–¥ –∫ –±–æ—Ç—É
 * @param {Object} bot - –≠–∫–∑–µ–º–ø–ª—è—Ä Telegram –±–æ—Ç–∞
 * @param {Function} handleStart - –§—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–æ–º–∞–Ω–¥—ã start
 */
function setupCommandHandlers(bot, handleStart) {
  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ /start —É–∂–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω –≤ –æ—Å–Ω–æ–≤–Ω–æ–º –∫–æ–¥–µ
  // –ù–æ –Ω–∞ –≤—Å—è–∫–∏–π —Å–ª—É—á–∞–π –¥–æ–±–∞–≤–ª—è–µ–º —è–≤–Ω–æ
  bot.command('start', handleStart);
  
  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /buy - –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –ø—Ä–æ–¥—É–∫—Ç–æ–≤
  bot.command('buy', async (ctx) => {
    try {
      // –ü–æ–ª—É—á–∞–µ–º –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      const userName = getUserName(ctx.from);
      
      await ctx.reply(
        `üìö –í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–æ–¥—É–∫—Ç, ${userName}:`,
        {
          reply_markup: {
            inline_keyboard: [
              [{ text: 'üî∞ –°—Ç–∞—Ä—Ç–æ–≤—ã–π –∫–æ–º–ø–ª–µ–∫—Ç - 990 ‚ÇΩ', callback_data: 'buy_starter' }],
              [{ text: 'üë§ –ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–æ–µ –∑–∞–Ω—è—Ç–∏–µ - 2 000 ‚ÇΩ', callback_data: 'buy_individual' }],
              [{ text: 'üéØ –ü–∞–∫–µ—Ç 3 –∑–∞–Ω—è—Ç–∏—è - 4500 ‚ÇΩ', callback_data: 'buy_package' }],
              [{ text: 'üèÜ –ü–æ–ª–Ω—ã–π –∫—É—Ä—Å –≤–∏–¥–µ–æ—É—Ä–æ–∫–æ–≤ - 14 999 ‚ÇΩ [üîÑ –í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ]', callback_data: 'product_in_development' }],
              [{ text: '‚óÄÔ∏è –ù–∞–∑–∞–¥', callback_data: 'back_to_menu' }]
            ]
          }
        }
      );
      
      logWithTime(`–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${ctx.from.id} –æ—Ç–∫—Ä—ã–ª –º–µ–Ω—é –≤—ã–±–æ—Ä–∞ –ø—Ä–æ–¥—É–∫—Ç–∞ —á–µ—Ä–µ–∑ –∫–æ–º–∞–Ω–¥—É /buy`);
    } catch (error) {
      console.error(`–û—à–∏–±–∫–∞ –≤ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–µ –∫–æ–º–∞–Ω–¥—ã /buy: ${error.message}`);
      await ctx.reply('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ /start –¥–ª—è –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞.');
    }
  });

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /info - –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫—É—Ä—Å–∞—Ö
  bot.command('info', async (ctx) => {
    try {
      // –ü–æ–ª—É—á–∞–µ–º –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      const userName = getUserName(ctx.from);
      
      // –°–Ω–∞—á–∞–ª–∞ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –ª–æ–≥–æ—Ç–∏–ø —Å –ø–æ–¥–ø–∏—Å—å—é
      await ctx.replyWithPhoto(
        { source: 'files/logo.jpg' },
        { caption: 'üå¨Ô∏è –î—ã—Ö–∞—Ç–µ–ª—å–Ω—ã–µ –ø—Ä–∞–∫—Ç–∏–∫–∏ –ê–Ω–∞—Å—Ç–∞—Å–∏–∏ –ü–æ–ø–æ–≤–æ–π - –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫—É—Ä—Å–∞—Ö' }
      );
      
      // –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –¥–ª—è –ª—É—á—à–µ–≥–æ UX
      await new Promise(resolve => setTimeout(resolve, 500));
      
      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π —Ç–µ–∫—Å—Ç
      await ctx.reply(
        `‚ÑπÔ∏è *–û –∫—É—Ä—Å–∞—Ö –¥—ã—Ö–∞—Ç–µ–ª—å–Ω—ã—Ö –ø—Ä–∞–∫—Ç–∏–∫*\n\n–ü—Ä–∏–≤–µ—Ç, ${userName}!\n\n*–ê–Ω–∞—Å—Ç–∞—Å–∏—è –ü–æ–ø–æ–≤–∞* - —Å–µ—Ä—Ç–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∏–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä –ø–æ –¥—ã—Ö–∞—Ç–µ–ª—å–Ω—ã–º –ø—Ä–∞–∫—Ç–∏–∫–∞–º.\n\n–ù–∞—à–∏ –∫—É—Ä—Å—ã –ø–æ–º–æ–≥—É—Ç –≤–∞–º:\n\n‚Ä¢ –ü–æ–≤—ã—Å–∏—Ç—å –∂–∏–∑–Ω–µ–Ω–Ω—É—é —ç–Ω–µ—Ä–≥–∏—é\n‚Ä¢ –°–Ω–∏–∑–∏—Ç—å —É—Ä–æ–≤–µ–Ω—å —Å—Ç—Ä–µ—Å—Å–∞\n‚Ä¢ –£–ª—É—á—à–∏—Ç—å –∫–∞—á–µ—Å—Ç–≤–æ —Å–Ω–∞\n‚Ä¢ –ü–æ–≤—ã—Å–∏—Ç—å –∏–º–º—É–Ω–∏—Ç–µ—Ç\n‚Ä¢ –£–ª—É—á—à–∏—Ç—å —Ä–∞–±–æ—Ç—É –¥—ã—Ö–∞—Ç–µ–ª—å–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã\n\n–í—ã–±–µ—Ä–∏—Ç–µ /buy –≤ –º–µ–Ω—é, —á—Ç–æ–±—ã –æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å –¥–æ—Å—Ç—É–ø–Ω—ã–º–∏ –ø—Ä–æ–≥—Ä–∞–º–º–∞–º–∏.`,
        { 
          parse_mode: 'Markdown',
          reply_markup: {
            ...mainKeyboard().reply_markup,
            remove_keyboard: true
          }
        }
      );
      
      logWithTime(`–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${ctx.from.id} –∑–∞–ø—Ä–æ—Å–∏–ª –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é —á–µ—Ä–µ–∑ –∫–æ–º–∞–Ω–¥—É /info`);
    } catch (error) {
      console.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∫–æ–º–∞–Ω–¥—ã /info: ${error.message}`);
      await ctx.reply('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ /start –¥–ª—è –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞.');
    }
  });

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /purchases - –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø–æ–∫—É–ø–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  bot.command('purchases', async (ctx) => {
    try {
      const userId = ctx.from.id;
      const { completedOrders } = global.botData;
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã–µ –∑–∞–∫–∞–∑—ã
      if (!completedOrders[userId] || completedOrders[userId].length === 0) {
        await ctx.reply(
          messageTemplates.noPurchases,
          { reply_markup: mainKeyboard().reply_markup }
        );
        return;
      }
      
      // –ï—Å–ª–∏ –µ—Å—Ç—å –∑–∞–∫–∞–∑—ã, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∏—Ö
      const orders = completedOrders[userId];
      let message = '*–í–∞—à–∏ –ø–æ–∫—É–ø–∫–∏:*\n\n';
      
      orders.forEach((order, index) => {
        const product = products[order.productId];
        const orderDate = new Date(order.completedAt).toLocaleDateString();
        const orderNumber = order.orderId || `#${Date.now().toString().slice(-6)}`;
        
        message += `*${index + 1}. ${product.name}*\n`;
        message += `üÜî –ó–∞–∫–∞–∑: ${orderNumber}\n`;
        message += `üìÖ –î–∞—Ç–∞: ${orderDate}\n`;
        message += `üí≥ –¶–µ–Ω–∞: ${product.price}\n`;
        
        if (order.recordingSent) {
          message += `üé¨ –ó–∞–ø–∏—Å—å –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏: ‚úÖ\n`;
        }
        
        message += '\n';
      });
      
      message += '\n–î–ª—è –ø–æ–≤—Ç–æ—Ä–Ω–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞ –∫ –º–∞—Ç–µ—Ä–∏–∞–ª–∞–º –Ω–∞–ø–∏—à–∏—Ç–µ –≤ —á–∞—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.';
      
      await ctx.reply(
        message, 
        { 
          parse_mode: 'Markdown',
          reply_markup: mainKeyboard().reply_markup 
        }
      );
      
      logWithTime(`–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${userId} –ø—Ä–æ—Å–º–æ—Ç—Ä–µ–ª —Å–≤–æ–∏ –ø–æ–∫—É–ø–∫–∏ —á–µ—Ä–µ–∑ –∫–æ–º–∞–Ω–¥—É /purchases`);
    } catch (error) {
      console.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∫–æ–º–∞–Ω–¥—ã /purchases: ${error.message}`);
      await ctx.reply('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ /start –¥–ª—è –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞.');
    }
  });

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /consultations - –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  bot.command('consultations', async (ctx) => {
    try {
      const userId = ctx.from.id;
      const { completedOrders } = global.botData;
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏
      if (!completedOrders[userId] || completedOrders[userId].length === 0) {
        await ctx.reply(
          '–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–π. –í—ã–±–µ—Ä–∏—Ç–µ /buy, —á—Ç–æ–±—ã –ø—Ä–∏–æ–±—Ä–µ—Å—Ç–∏ –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—É—é –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é.',
          { 
            reply_markup: {
              ...mainKeyboard().reply_markup,
              remove_keyboard: true
            } 
          }
        );
        return;
      }
      
      // –§–∏–ª—å—Ç—Ä—É–µ–º —Ç–æ–ª—å–∫–æ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏
      const consultations = completedOrders[userId].filter(
        order => order.productId === 'individual' || order.productId === 'package'
      );
      
      if (consultations.length === 0) {
        await ctx.reply(
          '–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã—Ö –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–π. –í—ã–±–µ—Ä–∏—Ç–µ /buy, —á—Ç–æ–±—ã –ø—Ä–∏–æ–±—Ä–µ—Å—Ç–∏ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é.',
          { 
            reply_markup: {
              ...mainKeyboard().reply_markup,
              remove_keyboard: true
            } 
          }
        );
        return;
      }
      
      // –ï—Å–ª–∏ –µ—Å—Ç—å –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∏—Ö
      let message = '*–í–∞—à–∏ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏:*\n\n';
      
      consultations.forEach((consultation, index) => {
        const product = products[consultation.productId];
        const orderDate = new Date(consultation.completedAt).toLocaleDateString();
        const orderNumber = consultation.orderId || `#${Date.now().toString().slice(-6)}`;
        
        message += `*${index + 1}. ${product.name}*\n`;
        message += `üÜî –ó–∞–∫–∞–∑: ${orderNumber}\n`;
        message += `üìÖ –î–∞—Ç–∞: ${orderDate}\n`;
        
        if (consultation.recordingSent) {
          message += `üé¨ –ó–∞–ø–∏—Å—å: ‚úÖ [–î–æ—Å—Ç—É–ø–Ω–∞]\n`;
          message += `üîó –°—Å—ã–ª–∫–∞: ${consultation.recordingLink || '–°–≤—è–∂–∏—Ç–µ—Å—å —Å –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–º'}\n`;
        } else {
          message += `üé¨ –ó–∞–ø–∏—Å—å: ‚è≥ [–û–∂–∏–¥–∞–µ—Ç –æ—Ç–ø—Ä–∞–≤–∫–∏]\n`;
        }
        
        message += '\n';
      });
      
      message += '–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∑–∞–ø–∏—Å–∏ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ –∏–ª–∏ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–º.';
      
      await ctx.reply(
        message, 
        { 
          parse_mode: 'Markdown',
          reply_markup: consultationsKeyboard().reply_markup
        }
      );
      
      logWithTime(`–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${userId} –ø—Ä–æ—Å–º–æ—Ç—Ä–µ–ª —Å–≤–æ–∏ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ —á–µ—Ä–µ–∑ –∫–æ–º–∞–Ω–¥—É /consultations`);
    } catch (error) {
      console.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∫–æ–º–∞–Ω–¥—ã /consultations: ${error.message}`);
      await ctx.reply('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ /start –¥–ª—è –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞.');
    }
  });

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /contact - –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∫–æ–Ω—Ç–∞–∫—Ç –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è
  bot.command('contact', async (ctx) => {
    try {
      // –ü–æ–ª—É—á–∞–µ–º –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      const userName = getUserName(ctx.from);
      
      await ctx.reply(
        `üì± *–°–≤—è–∑–∞—Ç—å—Å—è —Å –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–º*\n\n–ü—Ä–∏–≤–µ—Ç, ${userName}!\n\n–í—ã –º–æ–∂–µ—Ç–µ –Ω–∞–ø–∏—Å–∞—Ç—å –ê–Ω–∞—Å—Ç–∞—Å–∏–∏ –Ω–∞–ø—Ä—è–º—É—é –ø–æ –ª—é–±—ã–º –≤–æ–ø—Ä–æ—Å–∞–º:`,
        {
          parse_mode: 'Markdown',
          reply_markup: {
            inline_keyboard: [
              [{ text: '‚úâÔ∏è –ù–∞–ø–∏—Å–∞—Ç—å –ê–Ω–∞—Å—Ç–∞—Å–∏–∏', url: 'https://t.me/NastuPopova' }]
            ]
          }
        }
      );
      
      logWithTime(`–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${ctx.from.id} –∑–∞–ø—Ä–æ—Å–∏–ª –∫–æ–Ω—Ç–∞–∫—Ç –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è —á–µ—Ä–µ–∑ –∫–æ–º–∞–Ω–¥—É /contact`);
    } catch (error) {
      console.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∫–æ–º–∞–Ω–¥—ã /contact: ${error.message}`);
      await ctx.reply('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ /start –¥–ª—è –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞.');
    }
  });

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /help - –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–ø—Ä–∞–≤–∫—É
  bot.command('help', async (ctx) => {
    try {
      // –ü–æ–ª—É—á–∞–µ–º –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      const userName = getUserName(ctx.from);
      
      await ctx.reply(
        `üå¨Ô∏è *–î—ã—Ö–∞—Ç–µ–ª—å–Ω—ã–µ –ø—Ä–∞–∫—Ç–∏–∫–∏ –ê–Ω–∞—Å—Ç–∞—Å–∏–∏ –ü–æ–ø–æ–≤–æ–π*\n\n–ü—Ä–∏–≤–µ—Ç, ${userName}!\n\n–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n\n` +
        '‚Ä¢ /start - –ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É —Å –±–æ—Ç–æ–º\n' +
        '‚Ä¢ /buy - –ö—É–ø–∏—Ç—å –∫—É—Ä—Å –∏–ª–∏ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é\n' +
        '‚Ä¢ /info - –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫—É—Ä—Å–∞—Ö\n' +
        '‚Ä¢ /purchases - –ú–æ–∏ –ø–æ–∫—É–ø–∫–∏\n' +
        '‚Ä¢ /consultations - –ú–æ–∏ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏\n' +
        '‚Ä¢ /contact - –°–≤—è–∑–∞—Ç—å—Å—è —Å –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–º\n' +
        '‚Ä¢ /help - –ü–æ–ª—É—á–∏—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É\n\n' +
        '–ï—Å–ª–∏ —É –≤–∞—Å –≤–æ–∑–Ω–∏–∫–ª–∏ –≤–æ–ø—Ä–æ—Å—ã, –≤—ã –≤—Å–µ–≥–¥–∞ –º–æ–∂–µ—Ç–µ —Å–≤—è–∑–∞—Ç—å—Å—è —Å –ê–Ω–∞—Å—Ç–∞—Å–∏–µ–π –Ω–∞–ø—Ä—è–º—É—é: @NastuPopova',
        { 
          parse_mode: 'Markdown',
          reply_markup: {
            ...mainKeyboard().reply_markup,
            remove_keyboard: true
          }
        }
      );
      
      logWithTime(`–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${ctx.from.id} –∑–∞–ø—Ä–æ—Å–∏–ª —Å–ø—Ä–∞–≤–∫—É —á–µ—Ä–µ–∑ –∫–æ–º–∞–Ω–¥—É /help`);
    } catch (error) {
      console.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∫–æ–º–∞–Ω–¥—ã /help: ${error.message}`);
      await ctx.reply('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
    }
  });
  
  logWithTime('üìã –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥ –º–µ–Ω—é —É—Å–ø–µ—à–Ω–æ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã');
}

module.exports = {
  botCommands,
  setupBotCommands,
  setupCommandHandlers
};
